// This file is part of www.nand2tetris.org
// and the book "The Elements of Computing Systems"
// by Nisan and Schocken, MIT Press.
// File name: projects/03/a/RAM8.hdl

/**
 * Memory of 8 registers, each 16 bit-wide. Out holds the value
 * stored at the memory location specified by address. If load==1, then
 * the in value is loaded into the memory location specified by address
 * (the loaded value will be emitted to out from the next time step onward).
 */

CHIP RAM8 {
    IN in[16], load, address[3];
    OUT out[16];

    PARTS:
        DMux8Way(in=true, sel=address, a=sela, b=selb, c=selc, d=seld, e=sele, f=self, g=selg, h=selh);
        And(a=sela, b=load, out=loada);
        And(a=selb, b=load, out=loadb);
        And(a=selc, b=load, out=loadc);
        And(a=seld, b=load, out=loadd);
        And(a=sele, b=load, out=loade);
        And(a=self, b=load, out=loadf);
        And(a=selg, b=load, out=loadg);
        And(a=selh, b=load, out=loadh);
        Register(in=in, out=a, load=loada);
        Register(in=in, out=b, load=loadb);
        Register(in=in, out=c, load=loadc);
        Register(in=in, out=d, load=loadd);
        Register(in=in, out=e, load=loade);
        Register(in=in, out=f, load=loadf);
        Register(in=in, out=g, load=loadg);
        Register(in=in, out=h, load=loadh);
        Mux8Way16(a=a, b=b, c=c, d=d, e=e, f=f, g=g, h=h, sel=address, out=out);
}
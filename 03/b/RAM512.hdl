// This file is part of the materials accompanying the book
// "The Elements of Computing Systems" by Nisan and Schocken,
// MIT Press. Book site: www.idc.ac.il/tecs
// File name: projects/03/b/RAM512.hdl

/**
 * Memory of 512 registers, each 16 bit-wide. Out holds the value
 * stored at the memory location specified by address. If load==1, then
 * the in value is loaded into the memory location specified by address
 * (the loaded value will be emitted to out from the next time step onward).
 */

CHIP RAM512 {
    IN in[16], load, address[9];
    OUT out[16];

    PARTS:
        DMux8Way(in=true, sel=address[0..2], a=sela, b=selb, c=selc, d=seld, e=sele, f=self, g=selg, h=selh);
        And(a=sela, b=load, out=loada);
        And(a=selb, b=load, out=loadb);
        And(a=selc, b=load, out=loadc);
        And(a=seld, b=load, out=loadd);
        And(a=sele, b=load, out=loade);
        And(a=self, b=load, out=loadf);
        And(a=selg, b=load, out=loadg);
        And(a=selh, b=load, out=loadh);
        RAM64(in=in, load=loada, address=address[3..8], out=a);
        RAM64(in=in, load=loadb, address=address[3..8], out=b);
        RAM64(in=in, load=loadc, address=address[3..8], out=c);
        RAM64(in=in, load=loadd, address=address[3..8], out=d);
        RAM64(in=in, load=loade, address=address[3..8], out=e);
        RAM64(in=in, load=loadf, address=address[3..8], out=f);
        RAM64(in=in, load=loadg, address=address[3..8], out=g);
        RAM64(in=in, load=loadh, address=address[3..8], out=h);
        Mux8Way16(a=a, b=b, c=c, d=d, e=e, f=f, g=g, h=h, sel=address[0..2], out=out);
}